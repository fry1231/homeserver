version: '3.3'

services:
  homescreen:
    container_name: homescreen
    env_file:
      - .env  # !
    build: app
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --forwarded-allow-ips '*' --log-level critical
    expose:
      - 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homescreen.rule=Host(`homescreen.${DOMAIN:?err}`)"
      - "traefik.http.routers.homescreen.entrypoints=web,websecure"
#      - "traefik.http.routers.homescreen.entrypoints=web"
      - "traefik.http.routers.homescreen.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.homescreen-auth.basicauth.users=admin:${HASHPASS_ADMIN:?err}"
      - "traefik.http.routers.homescreen.middlewares=homescreen-auth"

  todobot:
    container_name: todobot
    env_file:
      - .env  # !
    build: todobot
    depends_on:
      - db
    command: python -m main

  db:
    container_name: pg_container
    image: postgres:13-alpine
    user: postgres
#    restart: always
    depends_on:
      - traefik
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER} --dbname=${POSTGRES_DB:?err}
      interval: 10s
      timeout: 10s
      retries: 50
      start_period: 30s

  redis:
    container_name: redis
    image: redis:7.0.7
    expose:
      - 6379

  traefik:
    container_name: traefik
    image: traefik:v2.9
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    command:
      - "--log.level=INFO"
#      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=:443"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL:?err}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${DOMAIN:?err}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:${HASHPASS_ADMIN:?err}"
volumes:
  postgres_data:
  letsencrypt: